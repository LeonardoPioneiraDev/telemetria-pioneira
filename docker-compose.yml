# ==========================================
# üê≥ DOCKER COMPOSE - TELEMETRIA PIONEIRA
# ==========================================

services:
  # ==========================================
  # üóÑÔ∏è BANCO DE DADOS POSTGRESQL
  # ==========================================
  postgres:
    image: postgres:15-alpine
    container_name: telemetria-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: telemetriaPioneira_db
      POSTGRES_USER: telemetria
      POSTGRES_PASSWORD: telemetria123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5435:5432"  # ‚úÖ Externa:Interna
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - telemetria-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U telemetria -d telemetriaPioneira_db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # ==========================================
  # ÔøΩÔøΩ BACKEND API
  # ==========================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      no_cache: true
    container_name: telemetria-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Ambiente
      NODE_ENV: development
      HOST: 0.0.0.0
      PORT: 3333
      
      # Database - ‚úÖ PORTA INTERNA DO CONTAINER
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432  # ‚úÖ Porta interna do PostgreSQL
      DATABASE_USERNAME: telemetria
      DATABASE_PASSWORD: telemetria123
      DATABASE_NAME: telemetriaPioneira_db
      DATABASE_SCHEMA: public
      DATABASE_SSL: false
      DATABASE_LOGGING: true
      
      # JWT
      JWT_SECRET: telemetria_secret_key_super_segura_2024_dev_environment
      JWT_REFRESH_SECRET: telemetria_refresh_secret_key_2024_dev_environment
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      
      # Email
      EMAIL_ENABLED: true
      EMAIL_DEBUG: true
      SMTP_HOST: mail.vpioneira.com.br
      SMTP_PORT: 587
      SMTP_USER: suporte@vpioneira.com.br
      SMTP_PASS: 564139
      SMTP_SECURE: false
      SMTP_TLS: true
      EMAIL_FROM_NAME: Telemetria Sistema
      EMAIL_FROM_ADDRESS: suporte@vpioneira.com.br
      
      # Admin
      AUTO_CREATE_ADMIN: true
      ADMIN_EMAIL: leonardolopes@vpioneira.com.br
      ADMIN_PASSWORD: Admin@123456
      ADMIN_USERNAME: admin
      ADMIN_FULL_NAME: Leonardo Lopes
      
      # Configura√ß√µes
      SWAGGER_ENABLED: true
      RATE_LIMIT_ENABLED: true
      LOG_LEVEL: debug
      LOG_TO_CONSOLE: true
      DEV_CREATE_SAMPLE_USERS: true
      
      # CORS
      CORS_ORIGIN: http://10.10.100.176:3000,http://10.10.100.176:3001,http://localhost:3000,http://localhost:3001
      CORS_CREDENTIALS: true
      
    ports:
      - "3333:3333"
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/src/templates:/app/src/templates:ro
    networks:
      - telemetria-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3333/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # ==========================================
  # ÔøΩÔøΩ PGADMIN (OPCIONAL)
  # ==========================================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: telemetria-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@telemetria.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - telemetria-network
    depends_on:
      - postgres
    profiles:
      - tools

# ==========================================
# üì¶ VOLUMES
# ==========================================
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

# ==========================================
# üåê NETWORKS
# ==========================================
networks:
  telemetria-network:
    driver: bridge